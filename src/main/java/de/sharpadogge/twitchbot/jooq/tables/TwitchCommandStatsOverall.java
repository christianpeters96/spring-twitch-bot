/*
 * This file is generated by jOOQ.
 */
package de.sharpadogge.twitchbot.jooq.tables;


import de.sharpadogge.twitchbot.jooq.Keys;
import de.sharpadogge.twitchbot.jooq.Twitchbot;
import de.sharpadogge.twitchbot.jooq.tables.records.TwitchCommandStatsOverallRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TwitchCommandStatsOverall extends TableImpl<TwitchCommandStatsOverallRecord> {

    private static final long serialVersionUID = 1258923718;

    /**
     * The reference instance of <code>twitchbot.twitch_command_stats_overall</code>
     */
    public static final TwitchCommandStatsOverall TWITCH_COMMAND_STATS_OVERALL = new TwitchCommandStatsOverall();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TwitchCommandStatsOverallRecord> getRecordType() {
        return TwitchCommandStatsOverallRecord.class;
    }

    /**
     * The column <code>twitchbot.twitch_command_stats_overall.id</code>.
     */
    public final TableField<TwitchCommandStatsOverallRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>twitchbot.twitch_command_stats_overall.channel</code>.
     */
    public final TableField<TwitchCommandStatsOverallRecord, String> CHANNEL = createField(DSL.name("channel"), org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>twitchbot.twitch_command_stats_overall.cmd</code>.
     */
    public final TableField<TwitchCommandStatsOverallRecord, String> CMD = createField(DSL.name("cmd"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>twitchbot.twitch_command_stats_overall.call_count</code>.
     */
    public final TableField<TwitchCommandStatsOverallRecord, Long> CALL_COUNT = createField(DSL.name("call_count"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>twitchbot.twitch_command_stats_overall</code> table reference
     */
    public TwitchCommandStatsOverall() {
        this(DSL.name("twitch_command_stats_overall"), null);
    }

    /**
     * Create an aliased <code>twitchbot.twitch_command_stats_overall</code> table reference
     */
    public TwitchCommandStatsOverall(String alias) {
        this(DSL.name(alias), TWITCH_COMMAND_STATS_OVERALL);
    }

    /**
     * Create an aliased <code>twitchbot.twitch_command_stats_overall</code> table reference
     */
    public TwitchCommandStatsOverall(Name alias) {
        this(alias, TWITCH_COMMAND_STATS_OVERALL);
    }

    private TwitchCommandStatsOverall(Name alias, Table<TwitchCommandStatsOverallRecord> aliased) {
        this(alias, aliased, null);
    }

    private TwitchCommandStatsOverall(Name alias, Table<TwitchCommandStatsOverallRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> TwitchCommandStatsOverall(Table<O> child, ForeignKey<O, TwitchCommandStatsOverallRecord> key) {
        super(child, key, TWITCH_COMMAND_STATS_OVERALL);
    }

    @Override
    public Schema getSchema() {
        return Twitchbot.TWITCHBOT;
    }

    @Override
    public Identity<TwitchCommandStatsOverallRecord, Long> getIdentity() {
        return Keys.IDENTITY_TWITCH_COMMAND_STATS_OVERALL;
    }

    @Override
    public UniqueKey<TwitchCommandStatsOverallRecord> getPrimaryKey() {
        return Keys.KEY_TWITCH_COMMAND_STATS_OVERALL_PRIMARY;
    }

    @Override
    public List<UniqueKey<TwitchCommandStatsOverallRecord>> getKeys() {
        return Arrays.<UniqueKey<TwitchCommandStatsOverallRecord>>asList(Keys.KEY_TWITCH_COMMAND_STATS_OVERALL_PRIMARY);
    }

    @Override
    public TwitchCommandStatsOverall as(String alias) {
        return new TwitchCommandStatsOverall(DSL.name(alias), this);
    }

    @Override
    public TwitchCommandStatsOverall as(Name alias) {
        return new TwitchCommandStatsOverall(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TwitchCommandStatsOverall rename(String name) {
        return new TwitchCommandStatsOverall(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TwitchCommandStatsOverall rename(Name name) {
        return new TwitchCommandStatsOverall(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, String, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
