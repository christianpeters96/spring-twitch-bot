/*
 * This file is generated by jOOQ.
 */
package de.sharpadogge.twitchbot.jooq.tables;


import de.sharpadogge.twitchbot.jooq.Keys;
import de.sharpadogge.twitchbot.jooq.Twitchbot;
import de.sharpadogge.twitchbot.jooq.tables.records.MusicSettingsRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MusicSettings extends TableImpl<MusicSettingsRecord> {

    private static final long serialVersionUID = 1971925535;

    /**
     * The reference instance of <code>twitchbot.music_settings</code>
     */
    public static final MusicSettings MUSIC_SETTINGS = new MusicSettings();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MusicSettingsRecord> getRecordType() {
        return MusicSettingsRecord.class;
    }

    /**
     * The column <code>twitchbot.music_settings.id</code>.
     */
    public final TableField<MusicSettingsRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>twitchbot.music_settings.user_id</code>.
     */
    public final TableField<MusicSettingsRecord, Long> USER_ID = createField(DSL.name("user_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>twitchbot.music_settings.provider</code>.
     */
    public final TableField<MusicSettingsRecord, String> PROVIDER = createField(DSL.name("provider"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false).defaultValue(org.jooq.impl.DSL.inline("'youtube'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>twitchbot.music_settings</code> table reference
     */
    public MusicSettings() {
        this(DSL.name("music_settings"), null);
    }

    /**
     * Create an aliased <code>twitchbot.music_settings</code> table reference
     */
    public MusicSettings(String alias) {
        this(DSL.name(alias), MUSIC_SETTINGS);
    }

    /**
     * Create an aliased <code>twitchbot.music_settings</code> table reference
     */
    public MusicSettings(Name alias) {
        this(alias, MUSIC_SETTINGS);
    }

    private MusicSettings(Name alias, Table<MusicSettingsRecord> aliased) {
        this(alias, aliased, null);
    }

    private MusicSettings(Name alias, Table<MusicSettingsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> MusicSettings(Table<O> child, ForeignKey<O, MusicSettingsRecord> key) {
        super(child, key, MUSIC_SETTINGS);
    }

    @Override
    public Schema getSchema() {
        return Twitchbot.TWITCHBOT;
    }

    @Override
    public Identity<MusicSettingsRecord, Long> getIdentity() {
        return Keys.IDENTITY_MUSIC_SETTINGS;
    }

    @Override
    public UniqueKey<MusicSettingsRecord> getPrimaryKey() {
        return Keys.KEY_MUSIC_SETTINGS_PRIMARY;
    }

    @Override
    public List<UniqueKey<MusicSettingsRecord>> getKeys() {
        return Arrays.<UniqueKey<MusicSettingsRecord>>asList(Keys.KEY_MUSIC_SETTINGS_PRIMARY);
    }

    @Override
    public List<ForeignKey<MusicSettingsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<MusicSettingsRecord, ?>>asList(Keys.FK_MUSIC_SETTINGS_USER_ID);
    }

    public Users users() {
        return new Users(this, Keys.FK_MUSIC_SETTINGS_USER_ID);
    }

    @Override
    public MusicSettings as(String alias) {
        return new MusicSettings(DSL.name(alias), this);
    }

    @Override
    public MusicSettings as(Name alias) {
        return new MusicSettings(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MusicSettings rename(String name) {
        return new MusicSettings(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MusicSettings rename(Name name) {
        return new MusicSettings(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
