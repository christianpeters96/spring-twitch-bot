/*
 * This file is generated by jOOQ.
 */
package de.sharpadogge.twitchbot.jooq.tables;


import de.sharpadogge.twitchbot.jooq.Keys;
import de.sharpadogge.twitchbot.jooq.Twitchbot;
import de.sharpadogge.twitchbot.jooq.tables.records.TwitchUserStatsDailyRecord;

import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row10;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TwitchUserStatsDaily extends TableImpl<TwitchUserStatsDailyRecord> {

    private static final long serialVersionUID = -1615899265;

    /**
     * The reference instance of <code>twitchbot.twitch_user_stats_daily</code>
     */
    public static final TwitchUserStatsDaily TWITCH_USER_STATS_DAILY = new TwitchUserStatsDaily();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TwitchUserStatsDailyRecord> getRecordType() {
        return TwitchUserStatsDailyRecord.class;
    }

    /**
     * The column <code>twitchbot.twitch_user_stats_daily.date</code>.
     */
    public final TableField<TwitchUserStatsDailyRecord, LocalDate> DATE = createField(DSL.name("date"), org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>twitchbot.twitch_user_stats_daily.channel</code>.
     */
    public final TableField<TwitchUserStatsDailyRecord, String> CHANNEL = createField(DSL.name("channel"), org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>twitchbot.twitch_user_stats_daily.username</code>.
     */
    public final TableField<TwitchUserStatsDailyRecord, String> USERNAME = createField(DSL.name("username"), org.jooq.impl.SQLDataType.VARCHAR(80).nullable(false), this, "");

    /**
     * The column <code>twitchbot.twitch_user_stats_daily.message_count</code>.
     */
    public final TableField<TwitchUserStatsDailyRecord, Long> MESSAGE_COUNT = createField(DSL.name("message_count"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>twitchbot.twitch_user_stats_daily.command_count</code>.
     */
    public final TableField<TwitchUserStatsDailyRecord, Long> COMMAND_COUNT = createField(DSL.name("command_count"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>twitchbot.twitch_user_stats_daily.timeout_count</code>.
     */
    public final TableField<TwitchUserStatsDailyRecord, Long> TIMEOUT_COUNT = createField(DSL.name("timeout_count"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>twitchbot.twitch_user_stats_daily.timeout_maxtime</code>.
     */
    public final TableField<TwitchUserStatsDailyRecord, Long> TIMEOUT_MAXTIME = createField(DSL.name("timeout_maxtime"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>twitchbot.twitch_user_stats_daily.deleted_message_count</code>.
     */
    public final TableField<TwitchUserStatsDailyRecord, Long> DELETED_MESSAGE_COUNT = createField(DSL.name("deleted_message_count"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>twitchbot.twitch_user_stats_daily.activity_time</code>. Seconds
     */
    public final TableField<TwitchUserStatsDailyRecord, Long> ACTIVITY_TIME = createField(DSL.name("activity_time"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "Seconds");

    /**
     * The column <code>twitchbot.twitch_user_stats_daily.activity_points</code>.
     */
    public final TableField<TwitchUserStatsDailyRecord, Double> ACTIVITY_POINTS = createField(DSL.name("activity_points"), org.jooq.impl.SQLDataType.FLOAT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.FLOAT)), this, "");

    /**
     * Create a <code>twitchbot.twitch_user_stats_daily</code> table reference
     */
    public TwitchUserStatsDaily() {
        this(DSL.name("twitch_user_stats_daily"), null);
    }

    /**
     * Create an aliased <code>twitchbot.twitch_user_stats_daily</code> table reference
     */
    public TwitchUserStatsDaily(String alias) {
        this(DSL.name(alias), TWITCH_USER_STATS_DAILY);
    }

    /**
     * Create an aliased <code>twitchbot.twitch_user_stats_daily</code> table reference
     */
    public TwitchUserStatsDaily(Name alias) {
        this(alias, TWITCH_USER_STATS_DAILY);
    }

    private TwitchUserStatsDaily(Name alias, Table<TwitchUserStatsDailyRecord> aliased) {
        this(alias, aliased, null);
    }

    private TwitchUserStatsDaily(Name alias, Table<TwitchUserStatsDailyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> TwitchUserStatsDaily(Table<O> child, ForeignKey<O, TwitchUserStatsDailyRecord> key) {
        super(child, key, TWITCH_USER_STATS_DAILY);
    }

    @Override
    public Schema getSchema() {
        return Twitchbot.TWITCHBOT;
    }

    @Override
    public UniqueKey<TwitchUserStatsDailyRecord> getPrimaryKey() {
        return Keys.KEY_TWITCH_USER_STATS_DAILY_PRIMARY;
    }

    @Override
    public List<UniqueKey<TwitchUserStatsDailyRecord>> getKeys() {
        return Arrays.<UniqueKey<TwitchUserStatsDailyRecord>>asList(Keys.KEY_TWITCH_USER_STATS_DAILY_PRIMARY);
    }

    @Override
    public TwitchUserStatsDaily as(String alias) {
        return new TwitchUserStatsDaily(DSL.name(alias), this);
    }

    @Override
    public TwitchUserStatsDaily as(Name alias) {
        return new TwitchUserStatsDaily(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TwitchUserStatsDaily rename(String name) {
        return new TwitchUserStatsDaily(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TwitchUserStatsDaily rename(Name name) {
        return new TwitchUserStatsDaily(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row10<LocalDate, String, String, Long, Long, Long, Long, Long, Long, Double> fieldsRow() {
        return (Row10) super.fieldsRow();
    }
}
