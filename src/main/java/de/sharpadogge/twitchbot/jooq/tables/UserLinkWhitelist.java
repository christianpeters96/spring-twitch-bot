/*
 * This file is generated by jOOQ.
 */
package de.sharpadogge.twitchbot.jooq.tables;


import de.sharpadogge.twitchbot.jooq.Keys;
import de.sharpadogge.twitchbot.jooq.Twitchbot;
import de.sharpadogge.twitchbot.jooq.tables.records.UserLinkWhitelistRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserLinkWhitelist extends TableImpl<UserLinkWhitelistRecord> {

    private static final long serialVersionUID = -1845773617;

    /**
     * The reference instance of <code>twitchbot.user_link_whitelist</code>
     */
    public static final UserLinkWhitelist USER_LINK_WHITELIST = new UserLinkWhitelist();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserLinkWhitelistRecord> getRecordType() {
        return UserLinkWhitelistRecord.class;
    }

    /**
     * The column <code>twitchbot.user_link_whitelist.user_id</code>.
     */
    public final TableField<UserLinkWhitelistRecord, Long> USER_ID = createField(DSL.name("user_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>twitchbot.user_link_whitelist.link</code>.
     */
    public final TableField<UserLinkWhitelistRecord, String> LINK = createField(DSL.name("link"), org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false), this, "");

    /**
     * Create a <code>twitchbot.user_link_whitelist</code> table reference
     */
    public UserLinkWhitelist() {
        this(DSL.name("user_link_whitelist"), null);
    }

    /**
     * Create an aliased <code>twitchbot.user_link_whitelist</code> table reference
     */
    public UserLinkWhitelist(String alias) {
        this(DSL.name(alias), USER_LINK_WHITELIST);
    }

    /**
     * Create an aliased <code>twitchbot.user_link_whitelist</code> table reference
     */
    public UserLinkWhitelist(Name alias) {
        this(alias, USER_LINK_WHITELIST);
    }

    private UserLinkWhitelist(Name alias, Table<UserLinkWhitelistRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserLinkWhitelist(Name alias, Table<UserLinkWhitelistRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> UserLinkWhitelist(Table<O> child, ForeignKey<O, UserLinkWhitelistRecord> key) {
        super(child, key, USER_LINK_WHITELIST);
    }

    @Override
    public Schema getSchema() {
        return Twitchbot.TWITCHBOT;
    }

    @Override
    public UniqueKey<UserLinkWhitelistRecord> getPrimaryKey() {
        return Keys.KEY_USER_LINK_WHITELIST_PRIMARY;
    }

    @Override
    public List<UniqueKey<UserLinkWhitelistRecord>> getKeys() {
        return Arrays.<UniqueKey<UserLinkWhitelistRecord>>asList(Keys.KEY_USER_LINK_WHITELIST_PRIMARY);
    }

    @Override
    public List<ForeignKey<UserLinkWhitelistRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserLinkWhitelistRecord, ?>>asList(Keys.FK_LINK_WHITELIST_USER_ID);
    }

    public Users users() {
        return new Users(this, Keys.FK_LINK_WHITELIST_USER_ID);
    }

    @Override
    public UserLinkWhitelist as(String alias) {
        return new UserLinkWhitelist(DSL.name(alias), this);
    }

    @Override
    public UserLinkWhitelist as(Name alias) {
        return new UserLinkWhitelist(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserLinkWhitelist rename(String name) {
        return new UserLinkWhitelist(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserLinkWhitelist rename(Name name) {
        return new UserLinkWhitelist(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
