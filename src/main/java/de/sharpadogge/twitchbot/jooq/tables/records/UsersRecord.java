/*
 * This file is generated by jOOQ.
 */
package de.sharpadogge.twitchbot.jooq.tables.records;


import de.sharpadogge.twitchbot.jooq.tables.Users;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> implements Record9<Long, String, Long, String, String, String, String, Byte, String> {

    private static final long serialVersionUID = -1658116121;

    /**
     * Setter for <code>twitchbot.users.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>twitchbot.users.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>twitchbot.users.token</code>.
     */
    public void setToken(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>twitchbot.users.token</code>.
     */
    public String getToken() {
        return (String) get(1);
    }

    /**
     * Setter for <code>twitchbot.users.ttv_id</code>.
     */
    public void setTtvId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>twitchbot.users.ttv_id</code>.
     */
    public Long getTtvId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>twitchbot.users.name</code>.
     */
    public void setName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>twitchbot.users.name</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>twitchbot.users.email</code>.
     */
    public void setEmail(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>twitchbot.users.email</code>.
     */
    public String getEmail() {
        return (String) get(4);
    }

    /**
     * Setter for <code>twitchbot.users.logo</code>.
     */
    public void setLogo(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>twitchbot.users.logo</code>.
     */
    public String getLogo() {
        return (String) get(5);
    }

    /**
     * Setter for <code>twitchbot.users.type</code>.
     */
    public void setType(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>twitchbot.users.type</code>.
     */
    public String getType() {
        return (String) get(6);
    }

    /**
     * Setter for <code>twitchbot.users.partner</code>.
     */
    public void setPartner(Byte value) {
        set(7, value);
    }

    /**
     * Getter for <code>twitchbot.users.partner</code>.
     */
    public Byte getPartner() {
        return (Byte) get(7);
    }

    /**
     * Setter for <code>twitchbot.users.bot_token</code>.
     */
    public void setBotToken(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>twitchbot.users.bot_token</code>.
     */
    public String getBotToken() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, String, Long, String, String, String, String, Byte, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Long, String, Long, String, String, String, String, Byte, String> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Users.USERS.ID;
    }

    @Override
    public Field<String> field2() {
        return Users.USERS.TOKEN;
    }

    @Override
    public Field<Long> field3() {
        return Users.USERS.TTV_ID;
    }

    @Override
    public Field<String> field4() {
        return Users.USERS.NAME;
    }

    @Override
    public Field<String> field5() {
        return Users.USERS.EMAIL;
    }

    @Override
    public Field<String> field6() {
        return Users.USERS.LOGO;
    }

    @Override
    public Field<String> field7() {
        return Users.USERS.TYPE;
    }

    @Override
    public Field<Byte> field8() {
        return Users.USERS.PARTNER;
    }

    @Override
    public Field<String> field9() {
        return Users.USERS.BOT_TOKEN;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getToken();
    }

    @Override
    public Long component3() {
        return getTtvId();
    }

    @Override
    public String component4() {
        return getName();
    }

    @Override
    public String component5() {
        return getEmail();
    }

    @Override
    public String component6() {
        return getLogo();
    }

    @Override
    public String component7() {
        return getType();
    }

    @Override
    public Byte component8() {
        return getPartner();
    }

    @Override
    public String component9() {
        return getBotToken();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getToken();
    }

    @Override
    public Long value3() {
        return getTtvId();
    }

    @Override
    public String value4() {
        return getName();
    }

    @Override
    public String value5() {
        return getEmail();
    }

    @Override
    public String value6() {
        return getLogo();
    }

    @Override
    public String value7() {
        return getType();
    }

    @Override
    public Byte value8() {
        return getPartner();
    }

    @Override
    public String value9() {
        return getBotToken();
    }

    @Override
    public UsersRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public UsersRecord value2(String value) {
        setToken(value);
        return this;
    }

    @Override
    public UsersRecord value3(Long value) {
        setTtvId(value);
        return this;
    }

    @Override
    public UsersRecord value4(String value) {
        setName(value);
        return this;
    }

    @Override
    public UsersRecord value5(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UsersRecord value6(String value) {
        setLogo(value);
        return this;
    }

    @Override
    public UsersRecord value7(String value) {
        setType(value);
        return this;
    }

    @Override
    public UsersRecord value8(Byte value) {
        setPartner(value);
        return this;
    }

    @Override
    public UsersRecord value9(String value) {
        setBotToken(value);
        return this;
    }

    @Override
    public UsersRecord values(Long value1, String value2, Long value3, String value4, String value5, String value6, String value7, Byte value8, String value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(Long id, String token, Long ttvId, String name, String email, String logo, String type, Byte partner, String botToken) {
        super(Users.USERS);

        set(0, id);
        set(1, token);
        set(2, ttvId);
        set(3, name);
        set(4, email);
        set(5, logo);
        set(6, type);
        set(7, partner);
        set(8, botToken);
    }
}
