/*
 * This file is generated by jOOQ.
 */
package de.sharpadogge.twitchbot.jooq.tables.records;


import de.sharpadogge.twitchbot.jooq.tables.UserLinkWhitelist;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserLinkWhitelistRecord extends UpdatableRecordImpl<UserLinkWhitelistRecord> implements Record2<Long, String> {

    private static final long serialVersionUID = 429308549;

    /**
     * Setter for <code>twitchbot.user_link_whitelist.user_id</code>.
     */
    public void setUserId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>twitchbot.user_link_whitelist.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>twitchbot.user_link_whitelist.link</code>.
     */
    public void setLink(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>twitchbot.user_link_whitelist.link</code>.
     */
    public String getLink() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return UserLinkWhitelist.USER_LINK_WHITELIST.USER_ID;
    }

    @Override
    public Field<String> field2() {
        return UserLinkWhitelist.USER_LINK_WHITELIST.LINK;
    }

    @Override
    public Long component1() {
        return getUserId();
    }

    @Override
    public String component2() {
        return getLink();
    }

    @Override
    public Long value1() {
        return getUserId();
    }

    @Override
    public String value2() {
        return getLink();
    }

    @Override
    public UserLinkWhitelistRecord value1(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserLinkWhitelistRecord value2(String value) {
        setLink(value);
        return this;
    }

    @Override
    public UserLinkWhitelistRecord values(Long value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserLinkWhitelistRecord
     */
    public UserLinkWhitelistRecord() {
        super(UserLinkWhitelist.USER_LINK_WHITELIST);
    }

    /**
     * Create a detached, initialised UserLinkWhitelistRecord
     */
    public UserLinkWhitelistRecord(Long userId, String link) {
        super(UserLinkWhitelist.USER_LINK_WHITELIST);

        set(0, userId);
        set(1, link);
    }
}
