/*
 * This file is generated by jOOQ.
 */
package de.sharpadogge.twitchbot.jooq.tables;


import de.sharpadogge.twitchbot.jooq.Keys;
import de.sharpadogge.twitchbot.jooq.Twitchbot;
import de.sharpadogge.twitchbot.jooq.tables.records.UserVarsRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserVars extends TableImpl<UserVarsRecord> {

    private static final long serialVersionUID = 153054279;

    /**
     * The reference instance of <code>twitchbot.user_vars</code>
     */
    public static final UserVars USER_VARS = new UserVars();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserVarsRecord> getRecordType() {
        return UserVarsRecord.class;
    }

    /**
     * The column <code>twitchbot.user_vars.user_id</code>.
     */
    public final TableField<UserVarsRecord, Long> USER_ID = createField(DSL.name("user_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>twitchbot.user_vars.name</code>.
     */
    public final TableField<UserVarsRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false), this, "");

    /**
     * The column <code>twitchbot.user_vars.value</code>.
     */
    public final TableField<UserVarsRecord, String> VALUE = createField(DSL.name("value"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * Create a <code>twitchbot.user_vars</code> table reference
     */
    public UserVars() {
        this(DSL.name("user_vars"), null);
    }

    /**
     * Create an aliased <code>twitchbot.user_vars</code> table reference
     */
    public UserVars(String alias) {
        this(DSL.name(alias), USER_VARS);
    }

    /**
     * Create an aliased <code>twitchbot.user_vars</code> table reference
     */
    public UserVars(Name alias) {
        this(alias, USER_VARS);
    }

    private UserVars(Name alias, Table<UserVarsRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserVars(Name alias, Table<UserVarsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> UserVars(Table<O> child, ForeignKey<O, UserVarsRecord> key) {
        super(child, key, USER_VARS);
    }

    @Override
    public Schema getSchema() {
        return Twitchbot.TWITCHBOT;
    }

    @Override
    public UniqueKey<UserVarsRecord> getPrimaryKey() {
        return Keys.KEY_USER_VARS_PRIMARY;
    }

    @Override
    public List<UniqueKey<UserVarsRecord>> getKeys() {
        return Arrays.<UniqueKey<UserVarsRecord>>asList(Keys.KEY_USER_VARS_PRIMARY);
    }

    @Override
    public List<ForeignKey<UserVarsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserVarsRecord, ?>>asList(Keys.FK_USER_VARS_USER_ID);
    }

    public Users users() {
        return new Users(this, Keys.FK_USER_VARS_USER_ID);
    }

    @Override
    public UserVars as(String alias) {
        return new UserVars(DSL.name(alias), this);
    }

    @Override
    public UserVars as(Name alias) {
        return new UserVars(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserVars rename(String name) {
        return new UserVars(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserVars rename(Name name) {
        return new UserVars(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
