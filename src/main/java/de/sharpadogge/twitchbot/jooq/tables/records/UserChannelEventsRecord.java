/*
 * This file is generated by jOOQ.
 */
package de.sharpadogge.twitchbot.jooq.tables.records;


import de.sharpadogge.twitchbot.jooq.tables.UserChannelEvents;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserChannelEventsRecord extends UpdatableRecordImpl<UserChannelEventsRecord> implements Record5<Long, Long, LocalDateTime, String, String> {

    private static final long serialVersionUID = 2128561476;

    /**
     * Setter for <code>twitchbot.user_channel_events.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>twitchbot.user_channel_events.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>twitchbot.user_channel_events.user_id</code>.
     */
    public void setUserId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>twitchbot.user_channel_events.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>twitchbot.user_channel_events.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>twitchbot.user_channel_events.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>twitchbot.user_channel_events.topic</code>.
     */
    public void setTopic(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>twitchbot.user_channel_events.topic</code>.
     */
    public String getTopic() {
        return (String) get(3);
    }

    /**
     * Setter for <code>twitchbot.user_channel_events.json_message</code>.
     */
    public void setJsonMessage(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>twitchbot.user_channel_events.json_message</code>.
     */
    public String getJsonMessage() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, LocalDateTime, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Long, LocalDateTime, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return UserChannelEvents.USER_CHANNEL_EVENTS.ID;
    }

    @Override
    public Field<Long> field2() {
        return UserChannelEvents.USER_CHANNEL_EVENTS.USER_ID;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return UserChannelEvents.USER_CHANNEL_EVENTS.CREATED_AT;
    }

    @Override
    public Field<String> field4() {
        return UserChannelEvents.USER_CHANNEL_EVENTS.TOPIC;
    }

    @Override
    public Field<String> field5() {
        return UserChannelEvents.USER_CHANNEL_EVENTS.JSON_MESSAGE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getUserId();
    }

    @Override
    public LocalDateTime component3() {
        return getCreatedAt();
    }

    @Override
    public String component4() {
        return getTopic();
    }

    @Override
    public String component5() {
        return getJsonMessage();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getUserId();
    }

    @Override
    public LocalDateTime value3() {
        return getCreatedAt();
    }

    @Override
    public String value4() {
        return getTopic();
    }

    @Override
    public String value5() {
        return getJsonMessage();
    }

    @Override
    public UserChannelEventsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public UserChannelEventsRecord value2(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserChannelEventsRecord value3(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public UserChannelEventsRecord value4(String value) {
        setTopic(value);
        return this;
    }

    @Override
    public UserChannelEventsRecord value5(String value) {
        setJsonMessage(value);
        return this;
    }

    @Override
    public UserChannelEventsRecord values(Long value1, Long value2, LocalDateTime value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserChannelEventsRecord
     */
    public UserChannelEventsRecord() {
        super(UserChannelEvents.USER_CHANNEL_EVENTS);
    }

    /**
     * Create a detached, initialised UserChannelEventsRecord
     */
    public UserChannelEventsRecord(Long id, Long userId, LocalDateTime createdAt, String topic, String jsonMessage) {
        super(UserChannelEvents.USER_CHANNEL_EVENTS);

        set(0, id);
        set(1, userId);
        set(2, createdAt);
        set(3, topic);
        set(4, jsonMessage);
    }
}
