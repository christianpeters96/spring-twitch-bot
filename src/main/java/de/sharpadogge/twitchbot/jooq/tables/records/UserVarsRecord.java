/*
 * This file is generated by jOOQ.
 */
package de.sharpadogge.twitchbot.jooq.tables.records;


import de.sharpadogge.twitchbot.jooq.tables.UserVars;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserVarsRecord extends UpdatableRecordImpl<UserVarsRecord> implements Record3<Long, String, String> {

    private static final long serialVersionUID = 1863014892;

    /**
     * Setter for <code>twitchbot.user_vars.user_id</code>.
     */
    public void setUserId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>twitchbot.user_vars.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>twitchbot.user_vars.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>twitchbot.user_vars.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>twitchbot.user_vars.value</code>.
     */
    public void setValue(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>twitchbot.user_vars.value</code>.
     */
    public String getValue() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return UserVars.USER_VARS.USER_ID;
    }

    @Override
    public Field<String> field2() {
        return UserVars.USER_VARS.NAME;
    }

    @Override
    public Field<String> field3() {
        return UserVars.USER_VARS.VALUE;
    }

    @Override
    public Long component1() {
        return getUserId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getValue();
    }

    @Override
    public Long value1() {
        return getUserId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getValue();
    }

    @Override
    public UserVarsRecord value1(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserVarsRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public UserVarsRecord value3(String value) {
        setValue(value);
        return this;
    }

    @Override
    public UserVarsRecord values(Long value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserVarsRecord
     */
    public UserVarsRecord() {
        super(UserVars.USER_VARS);
    }

    /**
     * Create a detached, initialised UserVarsRecord
     */
    public UserVarsRecord(Long userId, String name, String value) {
        super(UserVars.USER_VARS);

        set(0, userId);
        set(1, name);
        set(2, value);
    }
}
