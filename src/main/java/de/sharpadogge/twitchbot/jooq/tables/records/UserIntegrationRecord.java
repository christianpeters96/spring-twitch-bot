/*
 * This file is generated by jOOQ.
 */
package de.sharpadogge.twitchbot.jooq.tables.records;


import de.sharpadogge.twitchbot.jooq.tables.UserIntegration;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserIntegrationRecord extends UpdatableRecordImpl<UserIntegrationRecord> implements Record2<Long, Long> {

    private static final long serialVersionUID = 1150073085;

    /**
     * Setter for <code>twitchbot.user_integration.user_id</code>.
     */
    public void setUserId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>twitchbot.user_integration.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>twitchbot.user_integration.integration_id</code>.
     */
    public void setIntegrationId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>twitchbot.user_integration.integration_id</code>.
     */
    public Long getIntegrationId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return UserIntegration.USER_INTEGRATION.USER_ID;
    }

    @Override
    public Field<Long> field2() {
        return UserIntegration.USER_INTEGRATION.INTEGRATION_ID;
    }

    @Override
    public Long component1() {
        return getUserId();
    }

    @Override
    public Long component2() {
        return getIntegrationId();
    }

    @Override
    public Long value1() {
        return getUserId();
    }

    @Override
    public Long value2() {
        return getIntegrationId();
    }

    @Override
    public UserIntegrationRecord value1(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserIntegrationRecord value2(Long value) {
        setIntegrationId(value);
        return this;
    }

    @Override
    public UserIntegrationRecord values(Long value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserIntegrationRecord
     */
    public UserIntegrationRecord() {
        super(UserIntegration.USER_INTEGRATION);
    }

    /**
     * Create a detached, initialised UserIntegrationRecord
     */
    public UserIntegrationRecord(Long userId, Long integrationId) {
        super(UserIntegration.USER_INTEGRATION);

        set(0, userId);
        set(1, integrationId);
    }
}
